name: BACKEND-CICD

on:
  push:
    branches:
      - dev
    paths:
      - 'src/backend/**'
  pull_request:
    branches:
      - dev
    paths:
      - 'src/backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - stock_server
          - auth_server
          - workspace_server
          - chat_server
          - file_server
          - history_server
          - push_server
          - state_server
          - signaling_server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify repository structure
        run: |
          echo "Checking main directory..."
          ls -la
          echo "Checking src/backend/ directory..."
          ls -la src/backend/

      - name: Verify working directory
        run: ls -la src/backend/${{ matrix.service }}

      - name: Set up JDK 17 (Zulu)
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Build Gradle project
        working-directory: src/backend/${{ matrix.service }}
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Verify JAR file existence
        working-directory: src/backend/${{ matrix.service }}
        run: ls -la build/libs/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: src/backend/${{ matrix.service }}
        run: |
          docker build --platform linux/amd64 \
            --build-arg JAR_FILE=build/libs/${{ matrix.service }}-0.0.1-SNAPSHOT.jar \
            -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .

          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  cd:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Debug Secrets
        run: |
          echo "SERVER_IP=${{ secrets.SERVER_IP }}"
          echo "SERVER_USER=${{ secrets.SERVER_USER }}"
          echo "SERVER_KEY Length=$(echo -n "${{ secrets.SECRET_KEY }}" | wc -c)"
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SECRET_KEY }}
          script: |
            cd ~
            ./deploy.sh



