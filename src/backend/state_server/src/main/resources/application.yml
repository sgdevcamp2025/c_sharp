spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      acks: 0
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 131072  # 128KB (기존 64KB의 2배)
      properties:
        linger.ms: 50     # 50ms (기존 20ms보다 지연 시간 증가)
        buffer.memory: 134217728  # 128MB (버퍼 메모리 증가)
        compression.type: snappy
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info
  metrics:
    tags:
      application: state:server

topic:
  chat: jootalkpia.chat.prd.message
group:
  status: user-status-consumer-group

server:
  port: ${STATE_PORT}
  